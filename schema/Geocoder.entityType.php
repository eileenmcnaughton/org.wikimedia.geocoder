<?php
use CRM_Geocoder_ExtensionUtil as E;
return [
  'name' => 'Geocoder',
  'table' => 'civicrm_geocoder',
  'class' => 'CRM_Geocoder_DAO_Geocoder',
  'getInfo' => fn() => [
    'title' => E::ts('Geocoder'),
    'title_plural' => E::ts('Geocoders'),
    'description' => E::ts('Geocoding provider table'),
    'log' => TRUE,
    'label_field' => 'title',
  ],
  'getFields' => fn() => [
    'id' => [
      'title' => E::ts('Geocoder ID'),
      'sql_type' => 'int unsigned',
      'input_type' => NULL,
      'required' => TRUE,
      'readonly' => TRUE,
      'description' => E::ts('Unique Geocoder ID'),
      'primary_key' => TRUE,
      'auto_increment' => TRUE,
    ],
    'name' => [
      'title' => E::ts('Name'),
      'sql_type' => 'varchar(32)',
      'input_type' => NULL,
      'required' => TRUE,
      'readonly' => TRUE,
      'description' => E::ts('Provider name'),
    ],
    'title' => [
      'title' => E::ts('Title'),
      'sql_type' => 'varchar(32)',
      'input_type' => 'Text',
      'required' => TRUE,
      'description' => E::ts('Provider Title'),
      'input_attrs' => [
        'size' => '60',
      ],
    ],
    'class' => [
      'title' => E::ts('Class'),
      'sql_type' => 'varchar(32)',
      'input_type' => NULL,
      'required' => TRUE,
      'readonly' => TRUE,
      'description' => E::ts('Non generic part of the class name - after Geocoder_Provider. See mgd files for examples'),
    ],
    'is_active' => [
      'title' => E::ts('Enabled'),
      'sql_type' => 'boolean',
      'input_type' => 'CheckBox',
      'description' => E::ts('Enabled?'),
      'default' => FALSE,
    ],
    'weight' => [
      'title' => E::ts('Weight'),
      'sql_type' => 'int unsigned',
      'input_type' => 'Number',
      'description' => E::ts('Weight'),
    ],
    'api_key' => [
      'title' => E::ts('API key'),
      'sql_type' => 'varchar(255)',
      'input_type' => 'Text',
      'description' => E::ts('API Key or a json array of user customised values.'),
    ],
    'url' => [
      'title' => E::ts('Url'),
      'sql_type' => 'varchar(255)',
      'input_type' => 'Text',
      'description' => E::ts('URL (if required)'),
      'input_attrs' => [
        'size' => '60',
      ],
    ],
    'required_fields' => [
      'title' => E::ts('Required Fields'),
      'sql_type' => 'varchar(255)',
      'input_type' => NULL,
      'readonly' => TRUE,
      'description' => E::ts('Array of fields required for this to parse'),
      'serialize' => constant('CRM_Core_DAO::SERIALIZE_JSON'),
    ],
    'retained_response_fields' => [
      'title' => E::ts('Retained Response Fields'),
      'sql_type' => 'varchar(255)',
      'input_type' => NULL,
      'readonly' => TRUE,
      'description' => E::ts('fields to be retained from the response'),
      'default' => '["geo_code_1","geo_code_2"]',
      'serialize' => constant('CRM_Core_DAO::SERIALIZE_JSON'),
    ],
    'datafill_response_fields' => [
      'title' => E::ts('Datafill Response Fields'),
      'sql_type' => 'varchar(255)',
      'input_type' => NULL,
      'readonly' => TRUE,
      'description' => E::ts('fields retained to fill but not overwrite data'),
      'serialize' => constant('CRM_Core_DAO::SERIALIZE_JSON'),
    ],
    'threshold_standdown' => [
      'title' => E::ts('Threshold Standdown'),
      'sql_type' => 'int',
      'input_type' => 'Number',
      'description' => E::ts('Number of seconds to wait before retrying after hitting threshold. Geocaching delayed in this time'),
      'default' => 60,
    ],
    'threshold_last_hit' => [
      'title' => E::ts('Threshold Last Hit'),
      'sql_type' => 'timestamp',
      'input_type' => NULL,
      'readonly' => TRUE,
      'description' => E::ts('Timestamp when the threshold was last hit.'),
    ],
    'valid_countries' => [
      'title' => E::ts('Valid Countries'),
      'sql_type' => 'varchar(255)',
      'input_type' => NULL,
      'readonly' => TRUE,
      'description' => E::ts('Countries this geocoder is valid for'),
      'serialize' => constant('CRM_Core_DAO::SERIALIZE_JSON'),
    ],
  ],
];
